Convert the instructions that start with `{{ instructions_prefix }}` and end with `{{ instructions_postfix }}` into a list of machine-executable steps. 

Use either of these step types:

* [command]: a command executable on a {{ os }} OS with the project root folder as the current working directory. Use commands for tasks that require package management, building software, deployment, analysis, and others. 
* [save_file]: creates or updates ONE file. Output an empty string in `code_change_description` field. When a file needs multiple edits, combine all changes into a single 'save_file' step.
* [human_intervention]: a request for a human to perform steps that cannot be done by executing commands. Explain in details what you want the human to do. ALWAYS abstain from using `human_intervention` for testing, writing code, or reviewing code.

{{ file_naming }}

{{ relative_paths }}

{{ execution_order }}

**IMPORTANT**: You must abstain from including testing in these steps. Remember, even if the instructions ask for it, ALWAYS abstain from using `human_intervention` for testing, writing code, or reviewing code! 

Follow this example for your response:
<task examples>
```
{
  "tasks": [
    {
      "type": "save_file",
      "save_file": {
        "path": "./server.js",
        "code_change_description": "",
      },
    },
    {
      "type": "command",
      "command": {
        "command": "mv ./index.js ./public/index.js"",
        "timeout": "5000",
        "success_message": "",
        "command_id": "move_index_file"
      }
    }
  ]
}
```
</task examples>

Think step by step. Ensure to convert each instruction into steps.
